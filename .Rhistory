mean_base_sv = mean(sv[time<6], na.rm=TRUE), # toggle these depending on the outcome
mean_base_pep = mean(pep[time<6], na.rm=TRUE))
dat_long <- dat_long %>%
drop_na(
tpr,
#sv, # toggle these depending on the outcome
#pep,
cond.factor)
# Drop two subjects with <= 2 observations
goodid = dat_long %>% dplyr::summarize(n=n()) %>% filter(n>2) %>% select(pid)
# Create tsst reactivity dv:s
dat_long$tpr_react <- dat_long$tpr - dat_long$mean_base
#dat_long$sv_react <- dat_long$sv - dat_long$mean_base_sv
#dat_long$pep_react <- dat_long$pep - dat_long$mean_base_pep
# Make factors of continuous predictors that should be factors
dat_long$stressconds <- as_factor(dat_long$stressconds)
dat_long$mindsetconds <- as_factor(dat_long$mindsetconds)
dat_long$stressonly <- as_factor(dat_long$stressonly)
dat_long$msonly <- as_factor(dat_long$msonly)
dat_long$synergistic <- as_factor(dat_long$synergistic)
dat_long$racefactor <- as_factor(dat_long$s1.race)
# Set response variable
dat_long <- dat_long %>% filter(is.na(manipcheck)==F) # Toggle this depending on whether using the appraisal/well-being DVs
#dat_long <- dat_long %>% filter(is.na(wellbeing)==F) # Toggle this depending on whether using the appraisal/well-being DVs
# Mean center outcome variable
dat_long$tpr_react_mc_z <- as.vector(scale(dat_long$tpr_react))
# Modelling
# TPR is the main outcome if interest
mod_tpr_factors_unadjusted <- lmer(tpr_react_mc_z ~ stressonly + msonly + synergistic + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_factors_unadjusted)
confint(mod_tpr_factors_unadjusted)
confint(mod_tpr_factors_unadjusted, level = 0.98)
plot(mod_tpr_factors_unadjusted)
plot(Effect(c("stressonly"), mod_tpr_factors_unadjusted), ylim = c(-0.2, 1))
plot(Effect(c("msonly"), mod_tpr_factors_unadjusted), ylim = c(-0.2, 1))
plot(Effect(c("synergistic"), mod_tpr_factors_unadjusted), ylim = c(-0.2, 1))
mod_tpr_interaction_unadjusted <- lmer(tpr_react_mc_z ~ stressconds * mindsetconds + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_interaction_unadjusted)
plot(mod_tpr_interaction_unadjusted)
plot(Effect(c("stressconds", "mindsetconds"), mod_tpr_interaction_unadjusted))
mod_tpr_factors_fullyadjusted <- lmer(tpr_react_mc_z ~ stressonly + msonly + synergistic +
s1.sex + s1.age + racefactor + pss.baseline +
stressmindset.baseline + fixedmindset.baseline +
bothmindsets.baseline + selfesteem.baseline +
testanxiety.baseline + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_factors_fullyadjusted)
plot(mod_tpr_factors_fullyadjusted)
confint(mod_tpr_factors_fullyadjusted)
confint(mod_tpr_factors_fullyadjusted, level = 0.98)
plot(Effect(c("stressonly"), mod_tpr_factors_fullyadjusted), ylim = c(-0.2, 1))
plot(Effect(c("msonly"), mod_tpr_factors_fullyadjusted), ylim = c(-0.2, 1))
plot(Effect(c("synergistic"), mod_tpr_factors_fullyadjusted), ylim = c(-0.2, 1))
mod_tpr_interaction_fullyadjusted <- lmer(tpr_react_mc_z ~ stressconds * mindsetconds +
s1.sex + s1.age + racefactor + pss.baseline +
stressmindset.baseline + fixedmindset.baseline +
bothmindsets.baseline + selfesteem.baseline +
testanxiety.baseline + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_interaction_fullyadjusted)
plot(mod_tpr_interaction_fullyadjusted)
confint(mod_tpr_interaction_fullyadjusted)
plot(Effect(c("stressconds", "mindsetconds"), mod_tpr_interaction_fullyadjusted))
eff_mod_tpr_interaction_fullyadjusted <- Effect(c("stressconds", "mindsetconds"), mod_tpr_interaction_fullyadjusted)
plot(eff_mod_tpr_interaction_fullyadjusted$fit[1:2], type = "n", lwd = 2, col = "orange",
xlim = c(0.9, 2.1), ylim = c(0, 1), ylab = "TPR estimate (SD units)", frame.plot = F,
xlab = "stress", xaxt = "n", yaxt = "n")
axis(1, at = c(1, 2), labels = c("-", "+"))
axis(2, at = c(0, 0.5, 1))
lines(x = c(0.95, 1.95), y =eff_mod_tpr_interaction_fullyadjusted$fit[1:2], lwd = 2, col = "orange")
lines(x = c(0.95, 0.95), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[1], eff_mod_tpr_interaction_fullyadjusted$upper[1]), lwd = 2, col = "orange")
lines(x = c(1.95, 1.95), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[2], eff_mod_tpr_interaction_fullyadjusted$upper[2]), lwd = 2, col = "orange")
lines(x = c(1.05, 2.05), y =eff_mod_tpr_interaction_fullyadjusted$fit[3:4], lwd = 2, col = "darkgreen")
lines(x = c(1.05, 1.05), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[3], eff_mod_tpr_interaction_fullyadjusted$upper[3]), lwd = 2, col = "darkgreen")
lines(x = c(2.05, 2.05), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[4], eff_mod_tpr_interaction_fullyadjusted$upper[4]), lwd = 2, col = "darkgreen")
legend("bottomleft", col = c("orange", "darkgreen"), lwd = 2, legend = c("mindset -", "mindset +"))
# Test heterogeneity of treatment effects: prior mindsets found to be predictive in study 2
mod_tpr_interaction_hte1 <- lmer(tpr_react_mc_z ~ stressconds * mindsetconds * bothmindsets.baseline +
s1.sex + s1.age + racefactor + pss.baseline +
selfesteem.baseline +
testanxiety.baseline + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_interaction_hte1)
plot(mod_tpr_interaction_hte1)
confint(mod_tpr_interaction_hte1)
require(brms)
dat_long <- dat_long %>%
mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
dat_long <- dat_long %>%
mutate(cond.factor = factor(cond.factor)) %>%
mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
dat_long <- dat_long %>%
mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
lmer_tpr_factors_growth <- lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_growth)
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Stress"))
lmer_tpr_factors_stress <- lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_stress)
resultslmer_Synergisticvsgrowth <- extract_results(lmer_tpr_factors_growth)
coefs <- summary(lmer_tpr_factors_growth)$coefficients
View(coefs)
estimates <- coefs[-1, "Estimate"]
estimates
p_values <- coefs[-1, "Pr(>|t|)"]
p_values <- coefs[-1, "Pr(>|t|)"]
extract_results <- function(model) {
# Extraction Estimate and pvalue
coefs     <- summary(model)$coefficients
#estimates <- coefs[-1, "Estimate"]  # Sauter l'intercept
p_values  <- coefs[-1, "Pr(>|t|)"]
# Extraction CI
CI <- confint(model)
#conf_intervals <- conf_intervals[-c(1, 2), ]  # Enlever les intervalles de l'intercept
# Organise results
result_table <- data.frame(
Estimate = round(estimates, 2),
`Confidence interval` = paste0("[", round(CI[, 1], 2), "; ", round(CI[, 2], 2), "]"),
`p-value` = round(p_values, 3)
)
return(result_table)
}
resultsmer_Synergisticvsgrowth <- extract_results(lmer_tpr_factors_growth)
summary(lmer_tpr_factors_control)
summary(lmer_tpr_factors_growth)
extract_results <- function(model) {
# Extraction Estimate and pvalue
coefs     <- summary(model)$coefficients
#estimates <- coefs[-1, "Estimate"]  # Sauter l'intercept
p_values  <- coefs[-1, "t value"]
# Extraction CI
CI <- confint(model)
#conf_intervals <- conf_intervals[-c(1, 2), ]  # Enlever les intervalles de l'intercept
# Organise results
result_table <- data.frame(
Estimate = round(estimates, 2),
`Confidence interval` = paste0("[", round(CI[, 1], 2), "; ", round(CI[, 2], 2), "]"),
`p-value` = round(p_values, 3)
)
return(result_table)
}
resultsmer_Synergisticvsgrowth <- extract_results(lmer_tpr_factors_growth)
resultsmer_Synergisticvsgrowth
summary(lmer_tpr_factors_growth)
library(broom.mixed)
install.packages("broom.mixed", dependencies = FALSE)
table_results <- function(model, comparison_label) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth")
library(dplyr)
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth")
library(dplyr)
table_results <- function(model, comparison_label) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth")
library(broom.mixed)
install.packages("furrr")
library(broom.mixed)
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
table_results <- function(model, comparison_label) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth")
lmer_tpr_factors_growth <- lmerTest::lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_growth)
table_results <- function(model, comparison_label) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth")
library(lmerTest)
install.packages("lmerTest", dependencies = FALSE)
library(lmerTest)
lmer_tpr_factors_growth <- lmerTest::lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_growth)
table_results <- function(model, comparison_label) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round('Pr(>|t|)', 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth")
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
table_results <- function(model, comparison_label) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term != "(Intercept)") %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth")
resultslmer_synergistic_vs_growth
table_results <- function(model, comparison_label, target_comparison) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term == paste0("cond.factor", target_comparison)) %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
summary(lmer_tpr_factors_growth)
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
lmer_tpr_factors_growth <- lmerTest::lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_growth)
# Apply function
resultslmer_synergistic_vs_growth <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth", "Synergistic")
resultslmer_synergistic_vs_growth
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
lmer_tpr_factors_growth <- lmerTest::lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_growth)
# Synergistic vs Stress
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Stress"))
lmer_tpr_factors_stress <- lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_stress)
# Synergistic vs Control
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Control"))
lmer_tpr_factors_control <- lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_control)
table_results <- function(model, comparison_label, target_comparison) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term == paste0("cond.factor", target_comparison)) %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
resultslmer_synergisticvsgrowth  <- table_results(lmer_tpr_factors_growth, "Synergistic vs Growth", "Synergistic")
resultslmer_synergisticvsstress  <- table_results(lmer_tpr_factors_stress, "Synergistic vs Stress", "Synergistic")
resultslmer_synergisticvscontrol <- table_results(lmer_tpr_factors_control, "Synergistic vs Control", "Synergistic")
resultslmer_stressvscontrol      <- table_results(lmer_tpr_factors_control, "Stress vs Control", "Stress")
resultslmer_growthvscontrol      <- table_results(lmer_tpr_factors_control, "Growth vs Control", "Mindset")
# Apply function
final_estimates <- bind_rows(
resultslmer_synergisticvsgrowth = table_results(lmer_tpr_factors_growth, "Synergistic vs Growth", "Synergistic"),
resultslmer_synergisticvsstress = table_results(lmer_tpr_factors_stress, "Synergistic vs Stress", "Synergistic"),
resultslmer_synergisticvscontrol = table_results(lmer_tpr_factors_control, "Synergistic vs Control", "Synergistic"),
resultslmer_stressvscontrol      = table_results(lmer_tpr_factors_control, "Stress vs Control", "Stress"),
resultslmer_growthvscontrol      = table_results(lmer_tpr_factors_control, "Growth vs Control", "Mindset"))
print(final_estimates)
View(final_estimates)
# Apply function
final_table_lmer <- bind_rows(
table_results(lmer_tpr_factors_growth, "Synergistic vs Growth", "Synergistic"),
table_results(lmer_tpr_factors_stress, "Synergistic vs Stress", "Synergistic"),
table_results(lmer_tpr_factors_control, "Synergistic vs Control", "Synergistic"),
table_results(lmer_tpr_factors_control, "Stress vs Control", "Stress"),
table_results(lmer_tpr_factors_control, "Growth vs Control", "Mindset"))
print(final_table_lmer)
summary(lmer_tpr_factors_control)
print(final_table_lmer)
dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(dir)
library(tidyr)
library(dplyr)
library(readr)
library(lme4)
#library(multibart) # Not able to install
library(tidyverse)
library(effects)
dat_long <- read_csv("study4long.csv")
# Clean data and create variables for analyses
dat_long$tpr[dat_long$tpr<650] = NA
dat_long$tpr[dat_long$tpr>5000] = NA
dat_long$pid <- factor(dat_long$pid)
dat_long = dat_long %>% dplyr::group_by(pid) %>%
mutate(
mean_base = base::mean(tpr[time<6], na.rm=TRUE),
mean_base_sv = mean(sv[time<6], na.rm=TRUE), # toggle these depending on the outcome
mean_base_pep = mean(pep[time<6], na.rm=TRUE))
dat_long <- dat_long %>%
drop_na(
tpr,
#sv, # toggle these depending on the outcome
#pep,
cond.factor)
# Drop two subjects with <= 2 observations
goodid = dat_long %>% dplyr::summarize(n=n()) %>% filter(n>2) %>% select(pid)
# Create tsst reactivity dv:s
dat_long$tpr_react <- dat_long$tpr - dat_long$mean_base
#dat_long$sv_react <- dat_long$sv - dat_long$mean_base_sv
#dat_long$pep_react <- dat_long$pep - dat_long$mean_base_pep
# Make factors of continuous predictors that should be factors
dat_long$stressconds <- as_factor(dat_long$stressconds)
dat_long$mindsetconds <- as_factor(dat_long$mindsetconds)
dat_long$stressonly <- as_factor(dat_long$stressonly)
dat_long$msonly <- as_factor(dat_long$msonly)
dat_long$synergistic <- as_factor(dat_long$synergistic)
dat_long$racefactor <- as_factor(dat_long$s1.race)
# Set response variable
dat_long <- dat_long %>% filter(is.na(manipcheck)==F) # Toggle this depending on whether using the appraisal/well-being DVs
#dat_long <- dat_long %>% filter(is.na(wellbeing)==F) # Toggle this depending on whether using the appraisal/well-being DVs
# Mean center outcome variable
dat_long$tpr_react_mc_z <- as.vector(scale(dat_long$tpr_react))
# Modelling
# TPR is the main outcome if interest
mod_tpr_factors_unadjusted <- lmer(tpr_react_mc_z ~ stressonly + msonly + synergistic + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_factors_unadjusted)
confint(mod_tpr_factors_unadjusted)
confint(mod_tpr_factors_unadjusted, level = 0.98)
plot(mod_tpr_factors_unadjusted)
plot(Effect(c("stressonly"), mod_tpr_factors_unadjusted), ylim = c(-0.2, 1))
plot(Effect(c("msonly"), mod_tpr_factors_unadjusted), ylim = c(-0.2, 1))
plot(Effect(c("synergistic"), mod_tpr_factors_unadjusted), ylim = c(-0.2, 1))
mod_tpr_interaction_unadjusted <- lmer(tpr_react_mc_z ~ stressconds * mindsetconds + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_interaction_unadjusted)
plot(mod_tpr_interaction_unadjusted)
plot(Effect(c("stressconds", "mindsetconds"), mod_tpr_interaction_unadjusted))
mod_tpr_factors_fullyadjusted <- lmer(tpr_react_mc_z ~ stressonly + msonly + synergistic +
s1.sex + s1.age + racefactor + pss.baseline +
stressmindset.baseline + fixedmindset.baseline +
bothmindsets.baseline + selfesteem.baseline +
testanxiety.baseline + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_factors_fullyadjusted)
plot(mod_tpr_factors_fullyadjusted)
confint(mod_tpr_factors_fullyadjusted)
confint(mod_tpr_factors_fullyadjusted, level = 0.98)
plot(Effect(c("stressonly"), mod_tpr_factors_fullyadjusted), ylim = c(-0.2, 1))
plot(Effect(c("msonly"), mod_tpr_factors_fullyadjusted), ylim = c(-0.2, 1))
plot(Effect(c("synergistic"), mod_tpr_factors_fullyadjusted), ylim = c(-0.2, 1))
mod_tpr_interaction_fullyadjusted <- lmer(tpr_react_mc_z ~ stressconds * mindsetconds +
s1.sex + s1.age + racefactor + pss.baseline +
stressmindset.baseline + fixedmindset.baseline +
bothmindsets.baseline + selfesteem.baseline +
testanxiety.baseline + (1 | pid), data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ])
summary(mod_tpr_interaction_fullyadjusted)
plot(mod_tpr_interaction_fullyadjusted)
confint(mod_tpr_interaction_fullyadjusted)
plot(Effect(c("stressconds", "mindsetconds"), mod_tpr_interaction_fullyadjusted))
eff_mod_tpr_interaction_fullyadjusted <- Effect(c("stressconds", "mindsetconds"), mod_tpr_interaction_fullyadjusted)
plot(eff_mod_tpr_interaction_fullyadjusted$fit[1:2], type = "n", lwd = 2, col = "orange",
xlim = c(0.9, 2.1), ylim = c(0, 1), ylab = "TPR estimate (SD units)", frame.plot = F,
xlab = "stress", xaxt = "n", yaxt = "n")
axis(1, at = c(1, 2), labels = c("-", "+"))
axis(2, at = c(0, 0.5, 1))
lines(x = c(0.95, 1.95), y =eff_mod_tpr_interaction_fullyadjusted$fit[1:2], lwd = 2, col = "orange")
lines(x = c(0.95, 0.95), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[1], eff_mod_tpr_interaction_fullyadjusted$upper[1]), lwd = 2, col = "orange")
lines(x = c(1.95, 1.95), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[2], eff_mod_tpr_interaction_fullyadjusted$upper[2]), lwd = 2, col = "orange")
lines(x = c(1.05, 2.05), y =eff_mod_tpr_interaction_fullyadjusted$fit[3:4], lwd = 2, col = "darkgreen")
lines(x = c(1.05, 1.05), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[3], eff_mod_tpr_interaction_fullyadjusted$upper[3]), lwd = 2, col = "darkgreen")
lines(x = c(2.05, 2.05), y = c(eff_mod_tpr_interaction_fullyadjusted$lower[4], eff_mod_tpr_interaction_fullyadjusted$upper[4]), lwd = 2, col = "darkgreen")
legend("bottomleft", col = c("orange", "darkgreen"), lwd = 2, legend = c("mindset -", "mindset +"))
require(brms)
library(lmerTest)
library(broom.mixed)
dat_long <- dat_long %>%
mutate(cond.factor = factor(cond.factor)) %>%
mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
brm_tpr_factors_growth <- brm(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ],
iter = 4000, warmup = 2000)
summary(brm_tpr_factors_growth)
resultsbrm_Synergisticvsgrowth <- posterior_summary(brm_tpr_factors_growth)
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Stress"))
brm_tpr_factors_stress <- brm(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ],
iter = 4000, warmup = 2000)
summary(brm_tpr_factors_stress)
resultsbrm_Synergisticvsstress <- posterior_summary(brm_tpr_factors_stress)
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Control"))
brm_tpr_factors_control <- brm(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ],
iter = 4000, warmup = 2000)
summary(brm_tpr_factors_control)
resultsbrm_Synergisticvscontrol <- posterior_summary(brm_tpr_factors_control)
# Table comparisons
table_comparisons   <- data.frame(
Comparison = c("Synergistic vs Growth",
"Synergistic vs stress",
"Synergistic vs control",
"Stress vs control",
"Growth vs control"),
Estimate = c(round(resultsbrm_Synergisticvsgrowth["b_cond.factorSynergistic", "Estimate"], 2),
round(resultsbrm_Synergisticvsstress["b_cond.factorSynergistic", "Estimate"], 2),
round(resultsbrm_Synergisticvscontrol["b_cond.factorSynergistic", "Estimate"], 2),
round(resultsbrm_Synergisticvscontrol["b_cond.factorStress", "Estimate"], 2),
round(resultsbrm_Synergisticvscontrol["b_cond.factorMindset", "Estimate"], 2)),
CI_95 = c(paste0("[",round(resultsbrm_Synergisticvsgrowth["b_cond.factorSynergistic", "Q2.5"], 2), ";", round(resultsbrm_Synergisticvsgrowth["b_cond.factorSynergistic", "Q97.5"],2),"]"),
paste0("[",round(resultsbrm_Synergisticvsstress["b_cond.factorSynergistic", "Q2.5"], 2), ";", round(resultsbrm_Synergisticvsstress["b_cond.factorSynergistic", "Q97.5"],2),"]"),
paste0("[",round(resultsbrm_Synergisticvscontrol["b_cond.factorSynergistic", "Q2.5"], 2), ";", round(resultsbrm_Synergisticvscontrol["b_cond.factorSynergistic", "Q97.5"],2),"]"),
paste0("[",round(resultsbrm_Synergisticvscontrol["b_cond.factorStress", "Q2.5"], 2), ";", round(resultsbrm_Synergisticvscontrol["b_cond.factorStress", "Q97.5"],2),"]"),
paste0("[",round(resultsbrm_Synergisticvscontrol["b_cond.factorMindset", "Q2.5"], 2), ";", round(resultsbrm_Synergisticvscontrol["b_cond.factorMindset", "Q97.5"],2),"]")))
print(table_comparisons)
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Mindset"))
lmer_tpr_factors_growth <- lmerTest::lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_growth)
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Stress"))
lmer_tpr_factors_stress <- lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_stress)
dat_long <- dat_long %>% mutate(cond.factor = relevel(cond.factor, ref = "Control"))
lmer_tpr_factors_control <- lmer(tpr_react_mc_z ~ cond.factor + (1 | pid),
data = dat_long %>% filter(time %in% c(9, 10, 11, 12, 13)))
summary(lmer_tpr_factors_control)
table_results <- function(model, comparison_label, target_comparison) {
results <- tidy(model, conf.int = TRUE, conf.level = 0.95) %>%
filter(term == paste0("cond.factor", target_comparison)) %>% # Exclusion intercept
mutate(
Comparison = comparison_label,
`Confidence interval` = paste0("[", round(conf.low, 2), "; ", round(conf.high, 2), "]"),
Estimate = round(estimate, 2),
pvalue = round(p.value, 3)) %>%
select(Comparison, Estimate, `Confidence interval`, pvalue)
return(results)
}
# Apply function
final_table_lmer <- bind_rows(
table_results(lmer_tpr_factors_growth, "Synergistic vs Growth", "Synergistic"),
table_results(lmer_tpr_factors_stress, "Synergistic vs Stress", "Synergistic"),
table_results(lmer_tpr_factors_control, "Synergistic vs Control", "Synergistic"),
table_results(lmer_tpr_factors_control, "Stress vs Control", "Stress"),
table_results(lmer_tpr_factors_control, "Growth vs Control", "Mindset"))
print(final_table_lmer)
View(final_table_lmer)
View(table_comparisons)
summary(mod_tpr_interaction_fullyadjusted)
summary(mod_tpr_factors_fullyadjusted)
summary(mod_tpr_interaction_fullyadjusted)
summary(brm_tpr_factors_growth_adjusted)
brm_tpr_factors_growth_adjusted <- brm(tpr_react_mc_z ~ cond.factor + s1.sex + s1.age + racefactor + pss.baseline +
stressmindset.baseline + fixedmindset.baseline +
bothmindsets.baseline + selfesteem.baseline +
testanxiety.baseline + (1 | pid),
data = dat_long[dat_long$time %in% c(9, 10, 11, 12, 13), ],
iter = 4000, warmup = 2000)
dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(dir)
# Require libraries
library(tidyr)
library(dplyr)
library(readr)
library(lme4)
#library(multibart) # Not able to install
library(tidyverse)
library(effects)
# Read data
dat_long <- read_csv("study4long.csv")
